# Desafio de Automa√ß√£o Digital: Gest√£o de Pe√ßas, Qualidade e Armazenamento

## 1. V√≠deo Pitch ‚Äì Apresenta√ß√£o da Solu√ß√£o (2,0 pontos)

O v√≠deo apresenta a solu√ß√£o em Python desenvolvida para o Desafio de Automa√ß√£o Digital: Gest√£o de Pe√ßas, Qualidade e Armazenamento, voltado √† moderniza√ß√£o do processo de inspe√ß√£o de pe√ßas industriais.

### Problema da Ind√∫stria Resolvido:

O sistema visa eliminar falhas e atrasos causados pela inspe√ß√£o manual, permitindo que o controle de qualidade das pe√ßas seja automatizado, r√°pido e confi√°vel. Essa automa√ß√£o reduz custos operacionais e aumenta a precis√£o na aprova√ß√£o das pe√ßas.

### Estrutura L√≥gica do Sistema:

* O programa foi desenvolvido com base em crit√©rios de qualidade predefinidos (peso, cor e comprimento), utilizando estruturas condicionais e fun√ß√µes para determinar se cada pe√ßa √© aprovada ou reprovada.
* As pe√ßas aprovadas s√£o automaticamente alocadas em caixas de capacidade fixa (10 pe√ßas), sendo que o sistema fecha a caixa e inicia uma nova ao atingir o limite.
* Al√©m disso, o sistema gera relat√≥rios consolidados com totais de pe√ßas aprovadas, reprovadas, motivos de reprova√ß√£o e quantidade de caixas utilizadas.

### T√©cnicas e Boas Pr√°ticas Aplicadas:

Foram aplicados princ√≠pios de modulariza√ß√£o com fun√ß√µes bem definidas, uso de listas e dicion√°rios para armazenamento estruturado dos dados, al√©m da aplica√ß√£o de loops e condicionais otimizados para garantir clareza e efici√™ncia no c√≥digo. Tamb√©m foram implementadas mensagens interativas para facilitar a usabilidade.

### Demonstra√ß√£o do Programa:

A execu√ß√£o pr√°tica do sistema, mostrando seu funcionamento no terminal, est√° demonstrada nos links abaixo.

üìΩÔ∏è **Links dos V√≠deos:**
* Apresenta√ß√£o (Pitch): [https://youtu.be/JIov510DLs8](https://youtu.be/JIov510DLs8)
* Demonstra√ß√£o pr√°tica (Execu√ß√£o no terminal): [https://youtu.be/tkXdaJHcu7Y?si=bcL0V6VA-RIhPvqV](https://youtu.be/tkXdaJHcu7Y?si=bcL0V6VA-RIhPvqV)

---

## 2. Parte Te√≥rica ‚Äì An√°lise e Discuss√£o (1,5 pontos)

### A. Contextualiza√ß√£o do Desafio: A Import√¢ncia da Automa√ß√£o na Ind√∫stria

O setor industrial moderno, inserido no contexto da Ind√∫stria 4.0, exige que a produ√ß√£o seja n√£o apenas r√°pida, mas, acima de tudo, consistente. O desafio proposto espelha uma realidade comum: a inspe√ß√£o de qualidade manual.

A depend√™ncia de processos manuais na confer√™ncia de pe√ßas gera vulnerabilidades cr√≠ticas:

* **Inconsist√™ncia Humana:** Fatores como fadiga ou subjetividade do operador podem levar √† aprova√ß√£o de pe√ßas defeituosas (falhas de confer√™ncia) ou √† reprova√ß√£o indevida de pe√ßas boas.
* **Gargalos de Produ√ß√£o:** O tempo gasto na inspe√ß√£o manual atrasa o fluxo da linha de montagem, elevando o *lead time*.
* **Aumento de Custos:** Falhas de qualidade que n√£o s√£o detectadas precocemente resultam em custos de *retrabalho* ou *desperd√≠cio* tardio.

A automa√ß√£o digital, como a prototipada neste projeto, √© importante porque resolve esses pontos, oferecendo **velocidade, precis√£o determin√≠stica e rastreabilidade**, transformando o controle de qualidade de um gargalo em um processo eficiente e preditivo.

### B. Estrutura do Racioc√≠nio L√≥gico

A solu√ß√£o foi desenvolvida utilizando o paradigma de **Programa√ß√£o Orientada a Objetos (POO)** e um loop de controle interativo. O racioc√≠nio l√≥gico foi estruturado da seguinte forma:

* **Modelagem com Classes (POO):**
    * **Classe `Peca`:** Encapsula os atributos da pe√ßa (peso, cor, comprimento) e o resultado da inspe√ß√£o (*status* e *motivo*).
    * **Classe `GestaoProducao`:** Gerencia as listas de pe√ßas (aprovadas/reprovadas) e o estado log√≠stico (caixas fechadas e atual).
* **Decis√µes e Condi√ß√µes:** A fun√ß√£o `_avaliar_qualidade` utiliza condi√ß√µes aninhadas (`if`/`else`) para verificar peso, cor e comprimento.
* **Repeti√ß√£o e Fluxo de Controle:** O menu principal usa um loop `while True` para manter o sistema ativo at√© a op√ß√£o de sa√≠da.

### C. Benef√≠cios e Desafios Enfrentados

#### Benef√≠cios:

* **Tra√ßabilidade de Falhas:** Registro detalhado do motivo da reprova√ß√£o.
* **Gest√£o Log√≠stica Otimizada:** Fechamento autom√°tico de caixas com 10 pe√ßas.
* **Relat√≥rios Consolidados:** Fornece m√©tricas e causas de falha.

#### Desafios:

* **Gerenciamento de Estado Global:** Garantir consist√™ncia nas vari√°veis e caixas.
* **Valida√ß√£o de Entrada:** Uso de `try-except` para prevenir falhas por erro de digita√ß√£o.

### D. Reflex√£o Final: Expans√£o para um Cen√°rio Real

Este prot√≥tipo em Python serve como base l√≥gica para aplica√ß√µes industriais reais. Sua expans√£o incluiria:

* **Integra√ß√£o de Dados:** Sensores e CLPs (OPC UA / Modbus) coletando peso e comprimento automaticamente.
* **An√°lise de Cor e Defeitos:** Vis√£o computacional com OpenCV e IA (CNNs).
* **A√ß√£o Log√≠stica F√≠sica:** Integra√ß√£o com CLPs e rob√¥s para manuseio autom√°tico das caixas.
